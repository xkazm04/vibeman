{
  "contextId": "ctx_1761247087579_8he92iena",
  "updates": {
    "description": "## Overview\nComprehensive character management feature enabling writers and storytellers to create, organize, and track story characters with detailed profiles including appearance, traits, faction affiliations, relationships, and AI-powered generators for backstory, dialogue style, and trait suggestions. This is the primary feature of the Story application, supporting multi-tab views for character lists, factions, and detailed character profiles with advanced editing capabilities.\n\n## Key Capabilities\n- Character CRUD operations: Create, read, update, and delete characters within projects\n- Detailed character profiles: Track avatars, voice, type, and faction memberships\n- Character appearance management: Store detailed physical descriptions using the Appearance interface for AI image generation\n- AI-powered backstory generator: Generate rich character backstories using LLM integration\n- AI-powered dialogue styler: Create unique dialogue patterns and speaking styles\n- AI-powered trait generator: Generate personality traits with confidence scoring\n- Faction-based organization: View and organize characters by their faction affiliations with sub-feature components\n- Multi-tab character views: Tabbed interface for Characters, Factions, About, and Appearance sections\n- Character detail panel: Right-panel integration showing selected character details\n- Relationship management: Create and track character-to-character relationships\n\n## Architecture\n\n### Component Breakdown\n| Component/File | Purpose | Layer |\n|----------------|---------|-------|\n| `src/app/features/characters/CharactersFeature.tsx` | Main feature orchestrator with tab navigation | UI |\n| `src/app/features/characters/components/CharactersList.tsx` | Grid view of all characters in project | UI |\n| `src/app/features/characters/components/CharacterCard.tsx` | Individual character card with avatar and info | UI |\n| `src/app/features/characters/components/CharacterDetails.tsx` | Detailed character information panel | UI |\n| `src/app/features/characters/components/CharacterCreateForm.tsx` | Form for creating new characters | UI |\n| `src/app/features/characters/components/FactionsList.tsx` | Display and manage character factions | UI |\n| `src/app/features/characters/components/CharacterAbout.tsx` | Trait-based character profile with prompt sections | UI |\n| `src/app/features/characters/components/CharacterAppearance.tsx` | Physical appearance editor with AI description generation | UI |\n| `src/app/features/characters/components/CharacterBackstoryGenerator.tsx` | AI-powered backstory generation component | UI |\n| `src/app/features/characters/components/CharacterDialogueStyler.tsx` | AI-powered dialogue style customization | UI |\n| `src/app/features/characters/components/CharacterTraitGenerator.tsx` | AI-powered trait generation with confidence scoring | UI |\n| `src/app/features/characters/components/CharacterRelationships.tsx` | Character relationship manager | UI |\n| `src/app/features/characters/components/CreateRelationshipForm.tsx` | Relationship creation form | UI |\n| `src/app/features/characters/components/RelationshipCard.tsx` | Individual relationship display card | UI |\n| `src/app/features/characters/components/TraitPromptSection.tsx` | Trait prompt section component | UI |\n| `src/app/features/characters/sub_CharFactions/FactionsList.tsx` | Sub-feature for faction list view | UI |\n| `src/app/features/characters/sub_CharFactions/FactionCard.tsx` | Faction card component | UI |\n| `src/app/features/characters/sub_CharFactions/FactionDetails.tsx` | Faction detail panel | UI |\n| `src/app/features/characters/sub_CharRightPanel/CharRightPanel.tsx` | Character right panel wrapper | UI |\n| `src/app/api/characters.ts` | Character API hooks and mutation functions | API |\n| `src/app/store/characterStore.ts` | Character selection and UI state management | State |\n| `src/app/types/Character.ts` | TypeScript interfaces for characters, traits, relationships, appearances | Types |\n\n### Data Flow\nUser interacts with CharactersFeature → Selects character via CharactersList/CharacterCard → Updates characterStore → CharacterDetails/CharacterAbout/CharacterAppearance renders → User triggers AI generators → LLM prompts execute → API calls via characterApi hooks → React Query caches and manages server state → UI updates reactively\n\n### Key Dependencies\n- External: React Query (data fetching), Zustand (UI state), React (UI framework), Framer Motion (animations)\n- Internal: Project Store (project context), API utilities, Faction API (faction lookups), Trait API (traits management), LLM hooks (AI generation)\n\n## Technical Details\n\n### State Management\n- **Server State**: React Query manages character data with 5-minute cache using `useProjectCharacters`, `useGetCharacter`, `useCharactersByFaction` hooks\n- **Client State**: Zustand store tracks selected character ID for detail panel coordination\n- **Project Context**: Depends on selectedProject from projectStore to scope character queries\n\n### API Endpoints\n- `GET /characters/project/:projectId` - List all characters in project\n- `GET /characters/:id` - Get single character details\n- `GET /characters/faction/:factionId` - Filter characters by faction\n- `POST /characters` - Create new character\n- `PUT /characters/:id` - Update character\n- `PUT /characters/:id/avatar` - Update character avatar\n- `DELETE /characters/:id` - Delete character\n- `POST /llm` - LLM requests for backstory, dialogue, trait generation\n\n### Database Tables\n- **characters**: Core character data (id, name, type, voice, avatar_url, faction_id)\n- **traits**: Character traits (id, character_id, description, type)\n- **char_relationships**: Character relationships (id, character_a_id, character_b_id, description, event_date, act_id)\n\n## Usage Examples\n\n```typescript\n// Fetch project characters\nconst { data: characters } = characterApi.useProjectCharacters(projectId);\n\n// Create character\nawait characterApi.createCharacter({\n  name: \"Elena Ravencrest\",\n  type: \"protagonist\",\n  project_id: projectId,\n  faction_id: factionId\n});\n\n// Generate AI backstory\nconst backstory = await generateBackstory({\n  character: selectedCharacter,\n  projectContext,\n  tone: \"dramatic\"\n});\n\n// Generate dialogue style\nconst dialogueStyle = await generateDialogueStyle({\n  character: selectedCharacter,\n  traits: characterTraits,\n  examples: []\n});\n\n// Generate traits\nconst traits = await generateTraits({\n  character: selectedCharacter,\n  context: projectContext,\n  count: 5\n});\n```\n\n## Future Improvements\n- [ ] Implement optimistic updates for mutations\n- [ ] Add character search and advanced filtering\n- [ ] Implement character import/export functionality\n- [ ] Add character comparison view\n- [ ] Integrate AI image generation from appearance data\n- [ ] Add character voice preview/playback\n- [ ] Implement character timeline (events across story)\n- [ ] Add character arc visualization\n- [ ] Support character templates/archetypes\n- [ ] Add bulk character operations",
    "filePaths": [
      "src/app/features/characters/CharactersFeature.tsx",
      "src/app/features/characters/components/CharactersList.tsx",
      "src/app/features/characters/components/CharacterCard.tsx",
      "src/app/features/characters/components/CharacterDetails.tsx",
      "src/app/features/characters/components/CharacterCreateForm.tsx",
      "src/app/features/characters/components/FactionsList.tsx",
      "src/app/features/characters/components/CharacterAbout.tsx",
      "src/app/features/characters/components/CharacterAppearance.tsx",
      "src/app/features/characters/components/CharacterBackstoryGenerator.tsx",
      "src/app/features/characters/components/CharacterDialogueStyler.tsx",
      "src/app/features/characters/components/CharacterTraitGenerator.tsx",
      "src/app/features/characters/components/CharacterRelationships.tsx",
      "src/app/features/characters/components/CreateRelationshipForm.tsx",
      "src/app/features/characters/components/RelationshipCard.tsx",
      "src/app/features/characters/components/TraitPromptSection.tsx",
      "src/app/features/characters/sub_CharFactions/FactionsList.tsx",
      "src/app/features/characters/sub_CharFactions/FactionCard.tsx",
      "src/app/features/characters/sub_CharFactions/FactionDetails.tsx",
      "src/app/features/characters/sub_CharRightPanel/CharRightPanel.tsx",
      "src/app/api/characters.ts",
      "src/app/store/characterStore.ts",
      "src/app/types/Character.ts"
    ]
  }
}