import React from 'react';
import { BookOpen } from 'lucide-react';
import { useGlobalModal } from '../hooks/useGlobalModal';
import { MarkdownViewer } from './markdown';

const sampleAIDocsContent = `# Project AI Documentation

## Overview

This is a comprehensive AI-generated documentation for your project. It includes analysis, insights, and recommendations.

## Architecture Analysis

The project follows a modern React architecture with the following key components:

### Frontend Structure

- **Components**: Modular React components with TypeScript
- **Hooks**: Custom hooks for state management and API calls
- **Contexts**: Global state management with React Context
- **Styling**: Tailwind CSS with custom design system

### Key Features

:::info
This project implements a sophisticated markdown viewer with interactive content support.
:::

### Interactive Demo

Click here for {{API Details|The API layer handles all communication between the frontend and backend services. It includes proper error handling, request/response transformation, and caching mechanisms.|text}} more information.

### Code Quality

\`\`\`typescript
// Example of clean, typed code structure
interface ProjectConfig {
  name: string;
  version: string;
  features: string[];
}

const analyzeProject = (config: ProjectConfig): AnalysisResult => {
  return {
    score: calculateQualityScore(config),
    recommendations: generateRecommendations(config),
    nextSteps: prioritizeActions(config)
  };
};
\`\`\`

## Recommendations

| Priority | Action | Impact | Effort |
|----------|--------|--------|--------|
| High | Implement error boundaries | High | Medium |
| High | Add comprehensive testing | High | High |
| Medium | Optimize bundle size | Medium | Low |
| Low | Update documentation | Low | Low |

## Next Steps

1. **Immediate Actions**
   - Set up error monitoring
   - Implement loading states
   - Add input validation

2. **Short-term Goals**
   - Expand test coverage
   - Optimize performance
   - Enhance accessibility

3. **Long-term Vision**
   - Scale architecture
   - Add advanced features
   - Improve user experience

:::success
Your project shows strong architectural foundations and follows modern best practices!
:::

---

*Generated by AI Assistant on ${new Date().toLocaleDateString()}*`;

export default function AIDocsModalDemo() {
  const { showFullScreenModal } = useGlobalModal();

  const handleShowDemo = () => {
    showFullScreenModal(
      'AI Documentation Demo',
      <div className="h-full overflow-y-auto">
        <MarkdownViewer 
          content={sampleAIDocsContent}
          className="bg-gray-900/30 backdrop-blur-sm rounded-lg p-6"
        />
      </div>,
      {
        subtitle: 'Demo Project - context/high.md',
        icon: BookOpen,
        iconBgColor: 'bg-blue-500/20',
        iconColor: 'text-blue-400',
        maxWidth: 'max-w-7xl',
        maxHeight: 'max-h-[95vh]',
        backdropBlur: true
      }
    );
  };

  return (
    <div className="p-8 bg-gray-950 min-h-screen">
      <div className="max-w-md mx-auto">
        <h2 className="text-2xl font-bold text-white mb-6 text-center">
          AI Docs Modal Demo
        </h2>
        
        <button
          onClick={handleShowDemo}
          className="w-full p-4 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 text-white rounded-lg transition-all duration-200 flex items-center justify-center space-x-2 shadow-lg hover:shadow-xl"
        >
          <BookOpen className="w-5 h-5" />
          <span>Open AI Documentation</span>
        </button>
        
        <p className="text-gray-400 text-sm text-center mt-4">
          Click to see the enhanced MarkdownViewer in a full-screen modal
        </p>
      </div>
    </div>
  );
}