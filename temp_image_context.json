{
  "projectId": "dd11e61e-f267-4e52-95c5-421b1ed9567b",
  "groupId": null,
  "name": "Image Generation & Visual Content System",
  "description": "## Overview\nComprehensive AI-powered image generation and editing system supporting multiple providers (Leonardo, Stability AI, Midjourney, DALL-E, local models) with advanced prompt building, camera setup controls, sketch-to-image conversion, image editing operations, and gallery management. Enables artists and storytellers to generate character portraits, scenes, concept art, and visual assets with professional-grade controls over composition, lighting, camera angles, and art styles.\n\n## Key Capabilities\n- Multi-provider image generation: Leonardo, Stability AI, Midjourney, DALL-E 3, local Stable Diffusion\n- Advanced prompt builder: Art style, scenery, actors, actions, camera controls\n- Camera setup editor: Camera angles (eye level, high, low, dutch), shot types (extreme close-up to extreme wide), lighting presets, composition rules\n- Negative prompt generator: AI-powered suggestions for what to avoid\n- Prompt enhancer: Improve prompt quality and specificity\n- Sketch-to-image: Convert hand-drawn sketches to fully rendered images\n- Image editor: Upscale, inpaint, outpaint, remove background, style transfer, variations\n- Image gallery: Browse, filter, and organize generated images\n- Generation presets: Reusable camera and style configurations\n- Seed control: Reproducible image generation\n- Advanced parameters: Steps, CFG scale, sampler selection, aspect ratio\n- Image collections: Group related images together\n- Thumbnail generation: Automatic thumbnail creation\n\n## Architecture\n\n### Component Breakdown\n| Component/File | Purpose | Layer |\n|----------------|---------|-------|\n| `src/app/features/image/ImageFeature.tsx` | Main image feature orchestrator | UI |\n| `src/app/features/image/components/ImageGallery.tsx` | Image grid gallery with filtering | UI |\n| `src/app/features/image/components/PromptBuilder.tsx` | Multi-section prompt construction | UI |\n| `src/app/features/image/components/PromptEnhancer.tsx` | AI-powered prompt improvement | UI |\n| `src/app/features/image/components/NegativePromptGenerator.tsx` | AI-powered negative prompt suggestions | UI |\n| `src/app/features/image/generator/ImageGenerator.tsx` | Image generation form and controls | UI |\n| `src/app/features/image/generator/CameraSetup.tsx` | Camera angle/shot/lighting/composition editor | UI |\n| `src/app/features/image/generator/GenerationControls.tsx` | Advanced generation parameters | UI |\n| `src/app/features/image/sketch/SketchToImage.tsx` | Sketch upload and conversion | UI |\n| `src/app/features/image/editor/ImageEditor.tsx` | Image editing operations panel | UI |\n| `src/app/types/Image.ts` | Comprehensive image generation types | Types |\n| `src/hooks/useImages.ts` | Image API hooks and operations | API |\n| `src/prompts/image/promptEnhancement.ts` | Prompt enhancement LLM prompts | Prompts |\n| `src/prompts/image/negativePromptSuggestion.ts` | Negative prompt generation prompts | Prompts |\n| `src/prompts/image/promptFromDescription.ts` | Description-to-prompt conversion | Prompts |\n| `src/prompts/image/smartImageGeneration.ts` | Context-aware image generation | Prompts |\n\n### Data Flow\nUser opens Image feature → ImageFeature loads → User builds prompt via PromptBuilder → User configures camera via CameraSetup → User sets generation parameters → User clicks generate → ImageGenerator sends request → Provider API processes → Generated image returned → Image saved to gallery → ImageGallery updates → User selects image → ImageEditor opens → User applies edit operation → Edited image saved as variant → User creates sketch → SketchToImage converts → New image appears in gallery\n\n### Key Dependencies\n- External: React Query (data fetching), React (UI framework), Canvas API (sketch drawing), Framer Motion (animations)\n- Internal: LLM hooks (prompt enhancement), Project Store (project context), Image upload helpers\n\n## Technical Details\n\n### State Management\n- **Server State**: React Query manages image data with persistent cache\n  - `useImages(projectId)`: Fetch all generated images\n  - `useImage(imageId)`: Fetch single image\n  - `useImageVariants(imageId)`: Fetch image variations\n  - `useImageCollections(projectId)`: Fetch image collections\n- **Client State**: Local component state for form inputs and UI\n- **Generation Queue**: Async queue for multiple image generation requests\n\n### API Endpoints\n- `GET /images?projectId=x` - List generated images\n- `GET /images/:id` - Get image details\n- `POST /images/generate` - Generate new image\n- `POST /images/sketch-to-image` - Convert sketch to image\n- `POST /images/:id/edit` - Apply edit operation\n- `POST /images/:id/variants` - Generate image variants\n- `DELETE /images/:id` - Delete image\n- `POST /images/collections` - Create image collection\n- `POST /llm` - LLM requests for prompt enhancement\n\n### Database Tables\n- **generated_images**: Image data (id, url, thumbnail, prompt, negative_prompt, provider, model, width, height, seed, steps, cfg_scale, sampler, style, project_id, generation_id, created_at)\n- **image_variants**: Image variations (id, parent_image_id, url, variation_type, created_at)\n- **image_collections**: Grouped images (id, project_id, name, description, image_ids (JSON), created_at)\n- **image_edits**: Edit history (id, image_id, operation_type, parameters, result_url, created_at)\n\n## Usage Examples\n\n```typescript\n// Fetch project images\nconst { data: images } = useImages(projectId);\n\n// Generate image\nawait generateImage({\n  prompt: \"Epic fantasy warrior, standing on mountain peak, dramatic sunset\",\n  negative_prompt: \"blurry, low quality, deformed\",\n  provider: \"leonardo\",\n  model: \"leonardo-diffusion-xl\",\n  width: 1024,\n  height: 1536,\n  steps: 30,\n  cfg_scale: 7.5,\n  seed: 12345,\n  camera: {\n    angle: \"low\",\n    shotType: \"medium\",\n    lighting: \"golden_hour\",\n    composition: \"rule_of_thirds\"\n  },\n  style: \"cinematic\",\n  project_id: projectId\n});\n\n// Enhance prompt\nconst enhanced = await enhancePrompt({\n  original: \"a warrior\",\n  style: \"fantasy\",\n  detail_level: \"high\"\n});\n\n// Generate negative prompt\nconst negativePrompt = await generateNegativePrompt({\n  prompt: \"fantasy warrior\",\n  provider: \"leonardo\"\n});\n\n// Convert sketch to image\nawait sketchToImage({\n  sketch_file: sketchFile,\n  prompt: \"rendered fantasy warrior\",\n  style: \"realistic\",\n  project_id: projectId\n});\n\n// Edit image (upscale)\nawait editImage(imageId, {\n  operation: \"upscale\",\n  scale_factor: 2\n});\n\n// Generate variants\nawait generateVariants(imageId, {\n  variation_type: \"strong\",\n  count: 4\n});\n\n// Create collection\nawait createImageCollection({\n  name: \"Character Portraits\",\n  description: \"All character portrait renders\",\n  image_ids: [\"img_1\", \"img_2\", \"img_3\"],\n  project_id: projectId\n});\n```\n\n## Future Improvements\n- [ ] Add real-time generation progress tracking\n- [ ] Implement image-to-image generation\n- [ ] Support ControlNet for precise pose control\n- [ ] Add batch generation (multiple images at once)\n- [ ] Implement image comparison tool (A/B testing)\n- [ ] Support custom model fine-tuning\n- [ ] Add watermark removal/addition\n- [ ] Implement AI-powered image tagging\n- [ ] Support EXIF metadata preservation\n- [ ] Add image search by similarity\n- [ ] Implement generation cost tracking\n- [ ] Support video thumbnail extraction\n- [ ] Add mood board creation from images\n- [ ] Implement collaborative image annotation",
  "filePaths": [
    "src/app/features/image/ImageFeature.tsx",
    "src/app/features/image/components/ImageGallery.tsx",
    "src/app/features/image/components/PromptBuilder.tsx",
    "src/app/features/image/components/PromptEnhancer.tsx",
    "src/app/features/image/components/NegativePromptGenerator.tsx",
    "src/app/features/image/generator/ImageGenerator.tsx",
    "src/app/features/image/generator/CameraSetup.tsx",
    "src/app/features/image/generator/GenerationControls.tsx",
    "src/app/features/image/sketch/SketchToImage.tsx",
    "src/app/features/image/editor/ImageEditor.tsx",
    "src/app/types/Image.ts",
    "src/hooks/useImages.ts",
    "src/prompts/image/promptEnhancement.ts",
    "src/prompts/image/negativePromptSuggestion.ts",
    "src/prompts/image/promptFromDescription.ts",
    "src/prompts/image/smartImageGeneration.ts"
  ]
}
